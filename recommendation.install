<?php
/*
 * Implements hook_schema
 */
function recommendation_schema(){
    $schema['similarity'] = array(
        'description' => 'Stores the similarity between users.',
        'fields' => array(
            'uid1' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'description' => 'uid of user1'
            ),
            'uid2' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'description' => 'uid of user2'
            ),
            'score' => array(
                'type' => 'float',
                'unsigned' => TRUE,
                'size' => 'normal',
                'default' => 0,
                'description' => 'Score that defines the similarity between user1 and user2'
            ),
            'update_time' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'description' => 'Timestamp that when the score is updated.Table similarity will be updated in a certain time that can be configured'
            )
        ),
        'indexes' => array(
            'sim_uid' => array('uid1','uid2'),
        		'sim_score'=>array('score'),
        ),
    );
    return $schema;
}

/*
 * Implements hook_install
 * 
 * Set default recommended entity type
 */
function recommendation_install(){
	//set default node type to recommend
 foreach (node_type_get_types() as $type => $type_obj) {
      variable_set('rec_block_'.$type,$type);
    }
    //number of nodes to be recommended
    variable_set('rec_number','10');
    //set default weight of different action
    variable_set('rec_w_view',1);
    variable_set('rec_w_download',5);
    variable_set('rec_w_vote',5);
    update_similarity();
}
